---
# When installing packages during later steps, the Fedora Docker
# images we are using can throw sporadic errors like: "No such file or
# directory: '/var/cache/dnf/metadata_lock.pid'".
#
# The fix is to ensure that systemd finishes initializing before
# continuing on to the converge tasks.  For details see:
# https://www.jeffgeerling.com/blog/2020/resolving-fedora-dnf-error-no-such-file-or-directory-varlibdnfrpmdblockpid
- name: Group hosts by OS distribution
  hosts: all
  tasks:
    - name: Group hosts by OS distribution
      ansible.builtin.group_by:
        key: os_{{ ansible_distribution }}
- name: Wait for systemd to complete initialization (Fedora)
  hosts: os_Fedora
  tasks:
    # ansible-lint wants us to use the ansible.builtin.systemd_service
    # module here, but that module does not provide the
    # is-system-running functionality.  This is the reason for the
    # noqa comment on the next line.
    - name: Wait for systemd to complete initialization # noqa command-instead-of-module
      ansible.builtin.command: systemctl is-system-running
      changed_when: false
      delay: 5
      # The systemctl is-system-running command can return a nonzero
      # value if the status is degraded:
      # https://man.archlinux.org/man/systemctl.1#System_Commands
      #
      # This often happens when running ARM64 containers under qemu,
      # as some services (particularly systemd services) use kernel
      # calls that qemu can't emulate.
      failed_when: false
      retries: 30
      register: systemctl_status
      until: >
        'running' in systemctl_status.stdout or
        'degraded' in systemctl_status.stdout
      when: ansible_service_mgr == "systemd"

- name: Import upgrade playbook
  ansible.builtin.import_playbook: upgrade.yml

- name: Import externally-managed-python playbook
  ansible.builtin.import_playbook: externally-managed-python.yml

# Docker bind mounts a file from the host to /etc/resolv.conf.  This
# is inconvenient for us, since we need to create a symlink at
# /etc/resolv.conf.  At the same time, we don't want to break DNS.
# The playbook being imported contains a workaround for this
# situation.
- name: Unmount /etc/resolv.conf
  ansible.builtin.import_playbook: unmount.yml

# We require dig and netstat for our Molecule tests
- name: Install dig
  hosts: all
  become: true
  become_method: ansible.builtin.sudo
  tasks:
  - name: Install some tools that are required for testing
    ansible.builtin.package:
      name:
        - dnsutils
        - net-tools
