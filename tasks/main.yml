---
- name: Verify role variables
  block:
    - name: Verify value of systemd_resolved_dns_stub_listener
      ansible.builtin.assert:
        fail_msg: >
          Invalid value for systemd_resolved_dns_stub_listener: {{
          systemd_resolved_dns_stub_listener }}.  Valid values are the
          strings tcp or udp, or a boolean value.
        # True if any of the elements of conditions is true
        that: conditions is any
      vars:
        conditions:
          - systemd_resolved_dns_stub_listener is boolean
          - systemd_resolved_dns_stub_listener is string and systemd_resolved_dns_stub_listener == "tcp"
          - systemd_resolved_dns_stub_listener is string and systemd_resolved_dns_stub_listener == "udp"

- name: Load var file with OS-specific information
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - default.yml
      paths:
        - "{{ role_path }}/vars"

- name: Install systemd-resolved
  ansible.builtin.package:
    name:
      - systemd-resolved

- name: >-
    Ensure that the directory where the systemd-resolved drop-in will
    live actually exists
  ansible.builtin.file:
    group: root
    mode: 0755
    owner: root
    path: "{{ systemd_resolved_dropin_config_file | dirname }}"
    state: directory

- name: Set DNSStubListener config value for systemd-resolved
  community.general.ini_file:
    group: root
    mode: 0644
    # This is just to maintain the look and feel of the
    # /etc/systemd/resolved.conf file as provided by systemd-resolved.
    no_extra_spaces: true
    option: DNSStubListener
    owner: root
    path: "{{ systemd_resolved_dropin_config_file }}"
    section: Resolve
    value: "{{ systemd_resolved_dns_stub_listener }}"

- name: Enable and start systemd-resolved
  ansible.builtin.service:
    enabled: true
    name: systemd-resolved.service
    # We must start the service to populate the files in
    # /run/systemd/resolve/, which we need when we create a symlink
    # below.
    state: started

- name: Ensure resolvconf is not installed
  ansible.builtin.package:
    name:
      - resolvconf
    state: absent
  # TODO: For some reason dnf5 uninstalls systemd-resolved when I run
  # this on Fedora 41.  See #12 for more information.
  when: ansible_distribution != "Fedora" or ansible_distribution_major_version != "41"

- name: Create /etc/resolv.conf symlink
  ansible.builtin.file:
    # Note that group, owner, and mode can modify src when follow=true
    # and state=link are used:
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html#parameter-follow
    #
    # In fact, I found this to be exactly the case when testing.  In
    # other words, if I set follow=true (or left it as the default)
    # without specifying group, owner, or mode then the group and
    # owner of src (i.e., /run/systemd/resolve/stub-resolv.conf) would
    # both be changed from systemd-resolved to root.
    #
    # In this case we definitely _do not_ want to modify the group,
    # owner, or mode of src, and we do not need to follow any
    # filesystem links to arrive at /etc/resolv.conf, so we simply
    # override the default and set follow equal to false.  This will
    # ensure that no group, owner, or mode changes are applied to src.
    follow: false
    # If a file is already present at /etc/resolv.conf then just
    # delete it.
    force: true
    path: /etc/resolv.conf
    src: "{{ systemd_resolved_resolv_conf_filename }}"
    state: link
